// Code generated by "requestgen -type NoParamRequest -url /v1/bullet -method GET -debug ./example/api"; DO NOT EDIT.

package api

import (
	"context"
	"encoding/json"
	"fmt"
	"net/url"
	"regexp"
)

// GetQueryParameters builds and checks the query parameters and returns url.Values
func (n *NoParamRequest) GetQueryParameters() (url.Values, error) {
	var params = map[string]interface{}{}

	query := url.Values{}
	for k, v := range params {
		query.Add(k, fmt.Sprintf("%v", v))
	}

	return query, nil
}

// GetParameters builds and checks the parameters and return the result in a map object
func (n *NoParamRequest) GetParameters() (map[string]interface{}, error) {
	var params = map[string]interface{}{}

	return params, nil
}

// GetParametersQuery converts the parameters from GetParameters into the url.Values format
func (n *NoParamRequest) GetParametersQuery() (url.Values, error) {
	query := url.Values{}

	params, err := n.GetParameters()
	if err != nil {
		return query, err
	}

	for k, v := range params {
		query.Add(k, fmt.Sprintf("%v", v))
	}

	return query, nil
}

// GetParametersJSON converts the parameters from GetParameters into the JSON format
func (n *NoParamRequest) GetParametersJSON() ([]byte, error) {
	params, err := n.GetParameters()
	if err != nil {
		return nil, err
	}

	return json.Marshal(params)
}

// GetSlugParameters builds and checks the slug parameters and return the result in a map object
func (n *NoParamRequest) GetSlugParameters() (map[string]interface{}, error) {
	var params = map[string]interface{}{}

	return params, nil
}

func (n *NoParamRequest) applySlugsToUrl(url string, slugs map[string]string) string {
	for k, v := range slugs {
		needleRE := regexp.MustCompile(":" + k + "\\b")
		url = needleRE.ReplaceAllString(url, v)
	}

	return url
}

func (n *NoParamRequest) GetSlugsMap() (map[string]string, error) {
	slugs := map[string]string{}
	params, err := n.GetSlugParameters()
	if err != nil {
		return slugs, nil
	}

	for k, v := range params {
		slugs[k] = fmt.Sprintf("%v", v)
	}

	return slugs, nil
}

func (n *NoParamRequest) Do(ctx context.Context) (interface{}, error) {

	// no body params
	var params interface{}
	query := url.Values{}

	apiURL := "/v1/bullet"

	req, err := n.client.NewRequest(ctx, "GET", apiURL, query, params)
	if err != nil {
		return nil, err
	}

	response, err := n.client.SendRequest(req)
	if err != nil {
		return nil, err
	}

	var apiResponse interface{}
	if err := response.DecodeJSON(&apiResponse); err != nil {
		return nil, err
	}
	return apiResponse, nil
}
